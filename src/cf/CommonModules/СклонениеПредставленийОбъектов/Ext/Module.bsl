///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Склоняет ФИО
// Только для работы на ОС Windows.
//
// Параметры:
// 	ФИО		- Строка - Строка, в которой содержится ФИО для склонения.
// 	Падеж 	- Число - падеж, в который необходимо просклонять представление объекта.
//							1 - Именительный.
//							2 - Родительный.
//							3 - Дательный.
//							4 - Винительный.
//							5 - Творительный.
//							6 - Предложный.
//	Объект 	- ОбъектСклонения - Ссылка на объект, реквизит которого склоняется.
//	Пол		- Число - Число - пол физического лица, 
//							1 - мужской, 
//							2 - женский.
//
// Возвращаемое значение:
//	Строка - Результат склонения ФИО в падеже.
//
Функция ПросклонятьФИО(ФИО, Падеж, Объект = Неопределено, Пол = Неопределено) Экспорт
	
	Возврат Просклонять(ФИО, Падеж, Объект, Истина, Пол);
	
КонецФункции

// Склоняет представление объекта.
// Только для работы на ОС Windows.
//
// Параметры:
// 	Представление 	- Строка 	- Строка, в которой содержится ФИО для склонения.
// 	Падеж 			- Число  	- падеж, в который необходимо просклонять представление объекта.
//  	               			1 - Именительный.
//                  			2 - Родительный.
//                  			3 - Дательный.
//                  			4 - Винительный.
//                  			5 - Творительный.
//                  			6 - Предложный.
//  Объект 	- ОбъектСклонения 	- Ссылка на объект, реквизит которого склоняется.
//
// Возвращаемое значение:
//  Строка - Результат склонения представления объекта в падеже.
//
Функция ПросклонятьПредставление(Представление, Падеж, Объект = Неопределено) Экспорт
	
	Возврат Просклонять(Представление, Падеж, Объект);
	
КонецФункции

// Выполняет с формой действия, необходимые для подключения подсистемы Склонения.
//
// Параметры:
//  Форма - УправляемаяФорма - форма для подключения механизма склонения.
//  Представление - Строка - Строка для склонения.
//  ИмяОсновногоРеквизитаФормы - Строка - Имя основного реквизита формы. 
//
Процедура ПриСозданииНаСервере(Форма, Представление, ИмяОсновногоРеквизитаФормы = "Объект") Экспорт

	МассивРеквизитов = Новый Массив;
	
	ЗаголовокРеквизита = НСтр("ru = 'Изменено представление'");
	РеквизитИзмененоПредставление = Новый РеквизитФормы("ИзмененоПредставление", Новый ОписаниеТипов("Булево"), , ЗаголовокРеквизита);
	МассивРеквизитов.Добавить(РеквизитИзмененоПредставление);
	
	РеквизитСклонения = Новый РеквизитФормы("Склонения", Новый ОписаниеТипов(), , "Склонения");
	МассивРеквизитов.Добавить(РеквизитСклонения);
	
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	
	СтруктураСклонения = СклоненияИзРегистра(Представление, Форма[ИмяОсновногоРеквизитаФормы].Ссылка);
	Если СтруктураСклонения <> Неопределено Тогда
		Форма.Склонения = Новый ФиксированнаяСтруктура(СтруктураСклонения);
	КонецЕсли;
		
КонецПроцедуры

// Обработчик события ПриЗаписиНаСервере управляемой формы объекта для склонения.
//
// Параметры:
//  Форма 			- УправляемаяФорма - форма объекта склонения.
//  Представление   - Строка - Строка для склонения.
//  Объект 			- ОбъектСклонения - Объект для склонения.
//  ЭтоФИО       	- Булево - Признак склонения ФИО.
//	Пол				- Число	- Пол физического лица (в случае склонения ФИО)
//							1 - мужской 
//							2 - женский.
//
Процедура ПриЗаписиНаСервере(Форма, Представление, Объект, ЭтоФИО = Ложь, Пол = Неопределено) Экспорт

	Если Форма.ИзмененоПредставление Тогда
		СтруктураСклонений = ПросклонятьПредставлениеПоВсемПадежам(Представление, ЭтоФИО, Пол);
		Форма.Склонения = Новый ФиксированнаяСтруктура(СтруктураСклонений);
		Форма.ИзмененоПредставление = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Форма.Склонения) = Тип("ФиксированнаяСтруктура") Тогда
		ЗаписатьВРегистрСклонения(Представление, Объект, Форма.Склонения);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает признак доступности сервиса склонения.
//
// Параметры:
//  Доступность	- Булево - Признак доступности сервиса склонения.
//
Процедура УстановитьДоступностьСервисаСклонения(Доступность) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ТекущиеПараметры = Новый Соответствие(ПараметрыСеанса.ПараметрыКлиентаНаСервере);
	ТекущиеПараметры.Вставить("ДоступенСервисСклонения", Доступность);
	ПараметрыСеанса.ПараметрыКлиентаНаСервере = Новый ФиксированноеСоответствие(ТекущиеПараметры);
	
КонецПроцедуры

// Склоняет переданную фразу.
// Только для работы на ОС Windows.
//
// Параметры:
//  ФИО   - Строка - фамилия, имя и отчество в именительном падеже, 
//                   которые необходимо просклонять.
//  Падеж - Число  - падеж, в который необходимо поставить ФИО:
//                   1 - Именительный.
//                   2 - Родительный.
//                   3 - Дательный.
//                   4 - Винительный.
//                   5 - Творительный.
//                   6 - Предложный.
//  Результат - Строка - в этот параметр помещается результат склонения.
//                       Если ФИО не удалось просклонять, то возвращается значение ФИО.
//  Пол       - Число - пол физического лица, 1 - мужской, 2 - женский.
//
// Возвращаемое значение:
//   Булево - Истина, если ФИО удалось просклонять.
//
Функция ПросклонятьФИОСПомощьюКомпоненты(Знач ФИО, Падеж, Результат, Пол = Неопределено) Экспорт
	
	ПроверитьПараметрПолМетодаПросклонятьФИО(Пол);	
	
	// Определяем значение по умолчанию (именительный падеж).
	Результат = ФИО;
	СклоняемаяЧасть = "";
	МассивСтрок = СтрРазделить(ФИО, " ", Ложь);
	
	// Выделим первые 3 слова, так как компонента не умеет склонять фразу большую 3х символов.
	СловСклоняетКомпонента = 3;
	НомерНесклоняемогоСимвола = СловСклоняетКомпонента + 1;
	Для Номер = 1 По Мин(МассивСтрок.Количество(), СловСклоняетКомпонента) Цикл
		Если Не ФизическиеЛицаКлиентСервер.ФИОНаписаноВерно(МассивСтрок[Номер-1], Истина) Тогда
			НомерНесклоняемогоСимвола = Номер;
			Прервать;
		КонецЕсли;
		СклоняемаяЧасть = СклоняемаяЧасть + ?(Номер > 1, " ", "") + МассивСтрок[Номер-1];
	КонецЦикла;
	
	Если ПустаяСтрока(СклоняемаяЧасть) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	Компонента = ОбщегоНазначения.ПодключитьКомпонентуИзМакета("CNameDecl", "ОбщийМакет.КомпонентаСклоненияФИО");
	Если Компонента = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Если Пол = Неопределено Тогда
			Результат = Компонента.Просклонять(СклоняемаяЧасть, Падеж);
		Иначе
			Результат = Компонента.Просклонять(СклоняемаяЧасть, Падеж, Пол);
		КонецЕсли;
	Исключение
		Событие = НСтр("ru = 'Склонение ФИО при помощи компоненты'", ОбщегоНазначения.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(Событие, УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
	// Остальные символы добавим без склонения.
	Для Номер = НомерНесклоняемогоСимвола По МассивСтрок.Количество() Цикл
		Результат = Результат + " " + МассивСтрок[Номер-1];
	КонецЦикла;
	
	Результат = СокрЛП(Результат);
	
	Возврат Истина;
	
КонецФункции

// Определяет доступен ли сервис склонения.
// 
// Возвращаемое значение: 
//	Булево  - Истина, если веб-сервис склонения доступен.
//
Функция ДоступенСервисСклонения() Экспорт
	
	Результат = ПараметрыСеанса.ПараметрыКлиентаНаСервере.Получить("ДоступенСервисСклонения");
	
	Если Результат = Неопределено Тогда
		Возврат Истина;
	Иначе 
		Возврат Результат;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Склоняет переданную фразу по всем падежам.
//
// Параметры:
//  Представление   - Строка - Строка для склонения.
//  ЭтоФИО       	- Булево - Признак склонения ФИО.
//	Пол				- Число	- Пол физического лица (в случае склонения ФИО): 1 - мужской, 2 - женский.
//  ПоказыватьСообщения - Булево - Признак, определяющий нужно ли показывать пользователю сообщения об ошибках.
//
// Возвращаемое значение:
//	 Структура - со свойствами:
//		* ИменительныйПадеж - Строка.
//		* РодительныйПадеж 	- Строка.
//		* ДательныйПадеж 	- Строка.
//		* ВинительныйПадеж 	- Строка.
//		* ТворительныйПадеж - Строка.
//		* ПредложныйПадеж 	- Строка.
//
Функция ПросклонятьПредставлениеПоВсемПадежам(Представление, ЭтоФИО = Ложь, Пол = Неопределено, ПоказыватьСообщения = Ложь) Экспорт
	
	СтруктураСклонения = СклоненияИзРегистра(Представление);
		
	Если СтруктураСклонения <> Неопределено Тогда
		Возврат СтруктураСклонения;
	КонецЕсли;
	
	СтруктураСклонения = ДанныеСклонения(Представление, ЭтоФИО, Пол, ПоказыватьСообщения);
			
	Возврат СтруктураСклонения;
	
КонецФункции

// Получает данные склонения по всем падежам.
//
// Параметры:
//  Представление   - Строка - Строка для склонения.
//  ЭтоФИО          - Булево - Признак склонения ФИО.
//  Пол             - Число  - Пол физического лица (в случае склонения ФИО)
//                             1 - мужской 
//                             2 - женский.
//  ПоказыватьСообщения - Булево - Признак, определяющий нужно ли показывать пользователю сообщения об ошибках.
//
// Возвращаемое значение:
//   Структура - со свойствами:
//      * ИменительныйПадеж - Строка.
//      * РодительныйПадеж  - Строка.
//      * ДательныйПадеж    - Строка
//      * ВинительныйПадеж  - Строка.
//      * ТворительныйПадеж - Строка.
//      * ПредложныйПадеж   - Строка.
//
Функция ДанныеСклонения(Представление, ЭтоФИО = Ложь, Пол = Неопределено, ПоказыватьСообщения = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(Представление) Тогда
		Возврат СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
	КонецЕсли;
	
	Если Не ЭтоФИО Тогда
		ИспользоватьСервисСклонения = Константы.ИспользоватьСервисСклоненияMorpher.Получить();
		Если ИспользоватьСервисСклонения Тогда
			СтруктураСклонения = СтруктураСклоненияЧерезЗапросКСервису(Представление, ПоказыватьСообщения);
			Если СтруктураСклонения <> Неопределено Тогда
				Возврат СтруктураСклонения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураСклонения = Неопределено Тогда
		СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
	КонецЕсли;
	
	ПросклонятьСПомощьюКомпоненты = Ложь;
	
	Если ЭтоФИО Тогда
		ПросклонятьСПомощьюКомпоненты = Истина;
	Иначе
		МассивСтрок = СтрРазделить(Представление, " ", Ложь);
		Если МассивСтрок.Количество() = 1 
			И СтроковыеФункцииКлиентСерверРФ.ТолькоКириллицаВСтроке(Представление) Тогда
			ПросклонятьСПомощьюКомпоненты = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ПросклонятьСПомощьюКомпоненты Тогда
		ПросклонятьСПомощьюКомпоненты(Представление, СтруктураСклонения, , Пол);
	Иначе
		ЗаполнитьСтруктуруСклоненияПоПредставлению(СтруктураСклонения, Представление);
	КонецЕсли;
	
	Возврат СтруктураСклонения;
	
КонецФункции

Процедура ПросклонятьПредставлениеПоВсемПадежамДлительнаяОперация(Параметры, АдресРезультата) Экспорт
	
	Если Параметры.ИзмененоПредставление Или Параметры.Склонения = Неопределено Тогда

		СтруктураСклонения = ПросклонятьПредставлениеПоВсемПадежам(Параметры.Представление, Параметры.ЭтоФИО, Параметры.Пол, Истина);
		ПоместитьВоВременноеХранилище(СтруктураСклонения, АдресРезультата);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистем конфигурации.

// См. РаботаВБезопасномРежимеПереопределяемый.ПриЗаполненииРазрешенийНаДоступКВнешнимРесурсам.
Процедура ПриЗаполненииРазрешенийНаДоступКВнешнимРесурсам(ЗапросыРазрешений) Экспорт
	
	Разрешения = Новый Массив();
	
	МодульРаботаВБезопасномРежиме = ОбщегоНазначения.ОбщийМодуль("РаботаВБезопасномРежиме");
	
	Разрешения.Добавить(МодульРаботаВБезопасномРежиме.РазрешениеНаИспользованиеВнешнейКомпоненты("ОбщийМакет.КомпонентаСклоненияФИО", 
		НСтр("ru = 'Для использования функций по склонению ФИО.'")));
	
	ЗапросыРазрешений.Добавить(
		МодульРаботаВБезопасномРежиме.ЗапросНаИспользованиеВнешнихРесурсов(Разрешения));
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Склоняет представление объекта.
// Только для работы на ОС Windows.
//
// Параметры:
// 	Объект	- ОбъектСклонения 	- Ссылка на объект, в котором содержится реквизит для склонения.
// 	ВидПредставления - Строка 	- Имя реквизита объекта для склонения.
// 	Падеж 	- Число  			- падеж, в который необходимо просклонять представление объекта.
//                  			1 - Именительный.
//                  			2 - Родительный.
//                  			3 - Дательный.
//                  			4 - Винительный.
//                  			5 - Творительный.
//                  			6 - Предложный.
//
// Возвращаемое значение:
//  	Строка - Результат склонения представления объекта в падеже.
//
Функция Просклонять(Представление, Падеж, Объект = Неопределено, ЭтоФИО = Ложь, Пол = Неопределено) 
	
	ПредставлениеВПадеже = "";
	
	СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
	
	СоответствиеПадежей = СоответствиеПадежей();
	
	ИмяПадежа = СоответствиеПадежей.Получить(Падеж);
	
	Если ИмяПадежа = Неопределено Тогда
		Возврат ПредставлениеВПадеже;
	КонецЕсли;
	
	// сначала получаем склонения из регистра СклоненияПредставленийОбъектов.
	СтруктураСклоненияИзРегистра = СклоненияИзРегистра(Представление, Объект);
		
	Если СтруктураСклоненияИзРегистра <> Неопределено И ЗначениеЗаполнено(СтруктураСклоненияИзРегистра[ИмяПадежа]) Тогда
		Возврат СтруктураСклоненияИзРегистра[ИмяПадежа];
	КонецЕсли;
	
	Если ЭтоФИО Тогда
		
		// Если склоняем ФИО, то используем компоненту склонения ФИО.
		ПросклонятьСПомощьюКомпоненты(Представление, СтруктураСклонения, , Пол);
						
		// Запись в регистр СклоненияПредставленийОбъектов успешного склонения.
		Если ЗначениеЗаполнено(Объект) Тогда
			ЗаписатьВРегистрСклонения(Представление, Объект, СтруктураСклонения);
		КонецЕсли;
		
		Возврат СтруктураСклонения[ИмяПадежа];
		
	КонецЕсли;

	// Если склоняем не ФИО, тогда обращаемся к веб-сервису, если разрешено и сервис доступен.
	ИспользоватьСервисСклонения = Константы.ИспользоватьСервисСклоненияMorpher.Получить();
	Если Не ИспользоватьСервисСклонения Тогда
		Возврат Представление;
	КонецЕсли;
	
	СтруктураСклонения = СтруктураСклоненияЧерезЗапросКСервису(Представление, Ложь);
	Если СтруктураСклонения = Неопределено Тогда
		Возврат Представление;
	КонецЕсли;
		
	// Запись в регистр СклоненияПредставленийОбъектов успешного склонения.
	Если ЗначениеЗаполнено(Объект) Тогда
		ЗаписатьВРегистрСклонения(Представление, Объект, СтруктураСклонения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураСклонения[ИмяПадежа]) Тогда
		Возврат Представление;
	КонецЕсли;   
	
	Возврат СтруктураСклонения[ИмяПадежа];
			
КонецФункции

Процедура ЗаписатьВРегистрСклонения(Представление, Объект, Склонения) 
	
	Если Не Метаданные.ОпределяемыеТипы.ОбъектСклонения.Тип.СодержитТип(ТипЗнч(Объект)) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	ХешПредставления = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(Представление);
	НаборЗаписейСклонения = РегистрыСведений.СклоненияПредставленийОбъектов.СоздатьНаборЗаписей();
	НаборЗаписейСклонения.Отбор.Объект.Установить(Объект.Ссылка);
		
	НоваяСтрока = НаборЗаписейСклонения.Добавить();
	НоваяСтрока.Объект = Объект.Ссылка;
	НоваяСтрока.ХешПредставления = ХешПредставления;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Склонения);
	
	НаборЗаписейСклонения.Записать();
	
КонецПроцедуры

#Область СервисСклонений

Функция СтруктураСклоненияЧерезЗапросКСервису(СклоняемыйТекст, ПоказыватьСообщения) 
	
	Если Не ДоступенСервисСклонения() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	
	Соединение = HTTPСоединениеСервисаСклонений();
	Запрос = HTTPЗапросКСервисуСклонения(СклоняемыйТекст);
	Попытка
		Ответ = ВыполнитьЗапросСервисуСклонений(Соединение, Запрос);
	Исключение
		ЗарегистрироватьОшибкуСервисаСклонений(ИнформацияОбОшибке(), ПоказыватьСообщения);
		УстановитьДоступностьСервисаСклонения(Ложь);
		Возврат Неопределено;
	КонецПопытки;
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
	СтруктураОтвета = СтруктураОтветаСервисаСклонений(Ответ);
	
	СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
	СтруктураСклонения.ИменительныйПадеж = СклоняемыйТекст;
	СтруктураСклонения.РодительныйПадеж  = СтруктураОтвета.Р;
	СтруктураСклонения.ДательныйПадеж    = СтруктураОтвета.Д;
	СтруктураСклонения.ВинительныйПадеж  = СтруктураОтвета.В;
	СтруктураСклонения.ТворительныйПадеж = СтруктураОтвета.Т;
	СтруктураСклонения.ПредложныйПадеж   = СтруктураОтвета.П;
	
	Возврат СтруктураСклонения;
	
КонецФункции

Функция HTTPСоединениеСервисаСклонений()
	
	АдресСервера = "ws3.morpher.ru";
	
	ИнтернетПрокси = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПолучениеФайловИзИнтернета") Тогда
		МодульПолучениеФайловИзИнтернета = ОбщегоНазначения.ОбщийМодуль("ПолучениеФайловИзИнтернета");
		ИнтернетПрокси = МодульПолучениеФайловИзИнтернета.ПолучитьПрокси("https");
	КонецЕсли;
	
	Таймаут = 10;
	
	ЗащищенноеСоединение = ОбщегоНазначенияКлиентСервер.НовоеЗащищенноеСоединение();
	Возврат Новый HTTPСоединение(АдресСервера,,,, ИнтернетПрокси, Таймаут, ЗащищенноеСоединение);
	
КонецФункции

Функция HTTPЗапросКСервисуСклонения(СклоняемыйТекст)
	
	ТекстЗапроса = "/russian/declension?s=" + СклоняемыйТекст;
	
	УстановитьПривилегированныйРежим(Истина);
	ВладелецТокена = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.СклоненияПредставленийОбъектов");
	Токен = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВладелецТокена, "ТокенДоступаКСервисуMorpher", Истина);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ЗначениеЗаполнено(Токен) Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("User-Agent", "1C Enterprise 8.3");
	Заголовки.Вставить("Accept", "application/json");
	Заголовки.Вставить("charset", "UTF-8");
	
	Возврат Новый HTTPЗапрос(ТекстЗапроса, Заголовки);
	
КонецФункции

Функция ВыполнитьЗапросСервисуСклонений(Соединение, Запрос)
	
	Попытка
		Ответ = Соединение.Получить(Запрос);
	Исключение
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПолучениеФайловИзИнтернета") Тогда
			МодульПолучениеФайловИзИнтернета = ОбщегоНазначения.ОбщийМодуль("ПолучениеФайловИзИнтернета");
			РезультатДиагностики = МодульПолучениеФайловИзИнтернета.ДиагностикаСоединения(Соединение.Сервер);
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1
				           |
				           |Результат диагностики:
				           |%2'"),
				КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
				РезультатДиагностики.ОписаниеОшибки);
		Иначе 
			ВызватьИсключение;
		КонецЕсли
		
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при обработке запроса к ресурсу:
			           |%1'"),
			Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;
		
	Возврат Ответ;
	
КонецФункции

Функция СтруктураОтветаСервисаСклонений(Ответ)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

Процедура ЗарегистрироватьОшибкуСервисаСклонений(ИнформацияОбОшибке, ПоказыватьСообщения)
	
	// АПК:154-выкл Ошибка при вызове сервиса склонений не является критичной.
	
	ИмяСобытия = НСтр("ru = 'Вызов веб-сервиса склонения'", ОбщегоНазначения.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Предупреждение,,, 
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
	
	// АПК:154-вкл
	
	Если Не ПоказыватьСообщения Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Ошибка при вызове сервиса склонения. Обратитесь к администратору.
			       |Техническая информация:
			       |%1'"), 
		КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

Функция СклоненияИзРегистра(Представление, Объект = Неопределено)
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);

	СтруктураСклонения = Неопределено;
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ВЫРАЗИТЬ(СклоненияПредставленийОбъектов.ИменительныйПадеж КАК СТРОКА(255))) КАК КоличествоНаборовСклонений,
	|	СклоненияПредставленийОбъектов.ХешПредставления
	|ПОМЕСТИТЬ ТаблицаРегистраБезОтбораПоОбъекту
	|ИЗ
	|	РегистрСведений.СклоненияПредставленийОбъектов КАК СклоненияПредставленийОбъектов
	|ГДЕ
	|	СклоненияПредставленийОбъектов.ХешПредставления = &ХешПредставления
	|
	|СГРУППИРОВАТЬ ПО
	|	СклоненияПредставленийОбъектов.ХешПредставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СклоненияПредставленийОбъектов.ИменительныйПадеж,
	|	СклоненияПредставленийОбъектов.РодительныйПадеж,
	|	СклоненияПредставленийОбъектов.ДательныйПадеж,
	|	СклоненияПредставленийОбъектов.ВинительныйПадеж,
	|	СклоненияПредставленийОбъектов.ТворительныйПадеж,
	|	СклоненияПредставленийОбъектов.ПредложныйПадеж,
	|	0 КАК Приоритет
	|ИЗ
	|	РегистрСведений.СклоненияПредставленийОбъектов КАК СклоненияПредставленийОбъектов
	|ГДЕ
	|	&ИспользуетсяОтборПоОбъекту
	|	И СклоненияПредставленийОбъектов.Объект = &Объект
	|	И СклоненияПредставленийОбъектов.ХешПредставления = &ХешПредставления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СклоненияПредставленийОбъектов.ИменительныйПадеж,
	|	СклоненияПредставленийОбъектов.РодительныйПадеж,
	|	СклоненияПредставленийОбъектов.ДательныйПадеж,
	|	СклоненияПредставленийОбъектов.ВинительныйПадеж,
	|	СклоненияПредставленийОбъектов.ТворительныйПадеж,
	|	СклоненияПредставленийОбъектов.ПредложныйПадеж,
	|	1
	|ИЗ
	|	РегистрСведений.СклоненияПредставленийОбъектов КАК СклоненияПредставленийОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРегистраБезОтбораПоОбъекту КАК ТаблицаРегистраБезОтбораПоОбъекту
	|		ПО СклоненияПредставленийОбъектов.ХешПредставления = ТаблицаРегистраБезОтбораПоОбъекту.ХешПредставления
	|			И (ТаблицаРегистраБезОтбораПоОбъекту.КоличествоНаборовСклонений = 1)
	|ГДЕ
	|	СклоненияПредставленийОбъектов.ХешПредставления = &ХешПредставления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос.УстановитьПараметр("ХешПредставления", ОбщегоНазначения.КонтрольнаяСуммаСтрокой(Представление));
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ИспользуетсяОтборПоОбъекту", ЗначениеЗаполнено(Объект));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураСклонения = СклонениеПредставленийОбъектовКлиентСервер.СтруктураСклонения();
		ЗаполнитьЗначенияСвойств(СтруктураСклонения, Выборка);
	КонецЕсли;

	Возврат СтруктураСклонения;		
	
КонецФункции

Процедура ПросклонятьСПомощьюКомпоненты(Представление, СтруктураСклонения, Падеж = 0, Пол = Неопределено)
	
	СоответствиеПадежей = СоответствиеПадежей();

	Если Падеж = 0 Тогда
		СтруктураСклонения.ИменительныйПадеж = Представление;
		
		Для НомерПадежа = 2 По 6 Цикл
		
			ПросклонятьФИОСПомощьюКомпоненты(Представление, НомерПадежа, СтруктураСклонения[СоответствиеПадежей.Получить(НомерПадежа)], Пол);
			
		КонецЦикла;
		
	Иначе
		
		ИмяПадежа = СоответствиеПадежей.Получить(Падеж);
		Если ИмяПадежа <> Неопределено Тогда
			ПросклонятьФИОСПомощьюКомпоненты(Представление, Падеж, СтруктураСклонения[ИмяПадежа], Пол);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СоответствиеПадежей()
	
	СоответствиеПадежей = Новый Соответствие;
	
	СоответствиеПадежей.Вставить(1, "ИменительныйПадеж");
	СоответствиеПадежей.Вставить(2, "РодительныйПадеж");
	СоответствиеПадежей.Вставить(3, "ДательныйПадеж");
	СоответствиеПадежей.Вставить(4, "ВинительныйПадеж");
	СоответствиеПадежей.Вставить(5, "ТворительныйПадеж");
	СоответствиеПадежей.Вставить(6, "ПредложныйПадеж");
	
	Возврат СоответствиеПадежей;
	
КонецФункции

Процедура ЗаполнитьСтруктуруСклоненияПоПредставлению(СтруктураСклонения, Представление)
	
	Для Каждого КлючИЗначение Из СтруктураСклонения Цикл
		СтруктураСклонения.Вставить(КлючИЗначение.Ключ, Представление);
	КонецЦикла;
	                                                     
КонецПроцедуры

Функция ЕстьПравоДоступаКОбъекту(Ссылка) Экспорт
	
	Возврат ПравоДоступа("Редактирование", Ссылка.Метаданные());
	
КонецФункции

Процедура ПроверитьПараметрПолМетодаПросклонятьФИО(Пол)
	
	Если Пол = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"СклонениеПредставленийОбъектов.ПросклонятьФИО", "Пол", Пол, Тип("Число"));
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Недопустимое значение параметра %1 в %2.
		           |параметр должен числом 1 (мужской) или 2 (женский); передано значение: %3 (тип %4).'"),
		"Пол", "СклонениеПредставленийОбъектов.ПросклонятьФИО", Пол, ТипЗнч(Пол));
	ОбщегоНазначенияКлиентСервер.Проверить(Пол = 1 Или Пол = 2, ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти